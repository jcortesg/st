- if flash.any?
  .row
    .span12
      = render '/shared/flash', flash: flash

.row
  .span12
    .round_box
      .content
        - if current_user.available_for_withdraw > 0
          .right
            = link_to("Solicitar Cash Out (#{number_to_currency(current_user.available_for_withdraw)})", [:new, :influencer, :cash_out], :class => 'btn btn-primary')
        %h1.title Transacciones


        %h3
          Balance
          = number_to_currency(current_user.balance)
        %h3
          Disponible para retiro
          = number_to_currency(current_user.available_for_withdraw)
        - if CashOut.where(status: 'created', user_id: current_user.id).exists?
          - CashOut.where(status: 'created', user_id: current_user.id).each do |cash_out|
            %h3
              = "Cash Out Pendiente de Pago solicitado el dÃ­a #{cash_out.created_at.strftime("%d/%m/%Y")} por un importe de #{number_to_currency(cash_out.amount)}"
        %br

        %table.table.table-striped
          %thead
            %tr
              %th Fecha
              %th Tipo
              %th Link
              %th Importe
              %th Balance
              %th Acciones

          %tbody
            - @transactions.each do |transaction|
              %tr{ :class => cycle('odd', 'even') }
                %td= localize(transaction.transaction_at, :format => "%d/%m/%Y %H:%M:%S")
                %td= transaction_type_description(transaction.transaction_type)
                %td= influencer_attachable_link(transaction.attachable)
                %td= sprintf("%.02f", transaction.amount)
                %td= sprintf("%.02f", transaction.balance)
                %td
                  = link_to('Ver', [:influencer, transaction], class: 'btn btn-primary')
        .center_text
          = paginate @transactions

        .filters
          .subtitle Filtros
          = simple_form_for @search, :url => [:influencer, :transactions], html: {method: :get, id: 'filter_form', class: 'form-horizontal'} do |f|
            = f.input :transaction_at_greater_than_or_equal_to, label: 'Desde', required: false, input_html: { class: 'medium', id: 'from_datepicker', value: @search.transaction_at_greater_than_or_equal_to ? @search.transaction_at_greater_than_or_equal_to.strftime("%d/%m/%Y") : ''}
            = f.input :transaction_at_less_than_or_equal_to, label: 'Hasta', required: false, input_html: { class: 'medium', id: 'to_datepicker', value: @search.transaction_at_less_than_or_equal_to ? @search.transaction_at_less_than_or_equal_to.strftime("%d/%m/%Y") : ''}
            = f.input :amount_greater_than, label: 'Importe mayor a', required: false
            = f.input :amount_less_than, label: 'Importe menor a', required: false
            .form-actions
              = f.submit 'Filtrar', :class => 'btn btn-primary'
              = link_to 'Resetear', '#', :class => 'btn reset'