- content_for :head do
  = javascript_include_tag('advertiser/statistics')
  = stylesheet_link_tag('advertiser/statistics')

- if flash.any?
  .row
    .span12
      = render '/shared/flash', flash: flash

.row
  .span12
    %ul.breadcrumb
      %li
        = link_to("Campañas", [:advertiser, :campaigns])
        %span.divider /
      %li
        = link_to(@campaign.name, [:advertiser, @campaign])
        %span.divider /
      %li.active
        Estadísticas

.row
  .span12
    .round_box
      .content{style: 'font-size: 14px;line-height: 150%'}
        .right
          = link_to('Imprimir', '#', class: 'btn btn-primary', onclick: "window.print()")
          = link_to('PDF', statistics_advertiser_campaign_path(@campaign, format: :pdf), class: 'btn btn-primary')
        %h1.title= "Campaña #{@campaign.name} - Estadísticas"

        %h3 Datos Generales

        %br

        %div
          Objetivo:
          = @campaign.objective

        %div
          Twets:
          = @campaign.tweets.count
        %div
          Clicks:
          = @campaign.clicks_count
        %div
          Retweets:
          = @campaign.retweets_count
        %div
          Costo de la campaña:
          = number_to_currency(@campaign.tweets.sum(:tweet_fee))
        %div
          Costo Por Click de la campaña:
          = @campaign.statistics_cpc
        - unless @campaign.twitter_screen_name.blank?
          %div
            Costo Por Contacto de la campaña:
            = number_to_currency((@campaign.followers_start_count  + @campaign.retweets_count / @campaign.tweets.sum(:tweet_fee) ) )
        %div
          CPMS de la campaña:
          = @campaign.statistics_cpms
        - unless @campaign.twitter_screen_name.blank?
          %br
          %div
            Seguidores al inicio de la campaña:
            = @campaign.followers_start_count
          - if @campaign.status == 'archived'
            Seguidores al final de la campaña:
            = @campaign.followers_end_count
            - if @campaign.followers_end_count > @campaign.followers_start_count
              %div
                Incremento de seguidores:
                = @campaign.followers_end_count - @campaign.followers_start_count
          - else
            Seguidores actuales:
            - current_followers = @campaign.campaign_metrics.order('metric_on desc').first.followers
            = current_followers
            - if current_followers > @campaign.followers_start_count
              %div
                Incremento de seguidores:
                = current_followers - @campaign.followers_start_count

.row
  .span12
    .round_box
      .content

        %h1.title Reach

        #graph_reach_bar

        %br
        %hr
        %br

        #graph_reach_area

.row
  .span12
    .round_box
      .content

        %h1.title Evolución

        #evolution_clicks
        %br
        %br
        %hr
        %br
        %br
        #evolution_retweets
        %br
        %br
        %hr
        %br
        %br
        #evolution_followers
        %br
        %br


.row
  .span12
    .round_box
      .content

        %h1.title Tweets

        %table.table.table-striped
          %thead
            %tr
              %th{style: 'width: 45px'} &nbsp;
              %th Celebridad
              %th Clicks
              %th CPC
              %th CPMS
              %th Reach
              %th Acciones

          %tbody
            - @campaign.tweets.activated.each do |tweet|
              %tr{ :class => cycle('odd', 'even') }
                %td= img_link_to_twitter(tweet.influencer)
                %td
                  = link_to("@#{tweet.influencer.user.twitter_screen_name}", "http://twitter.com/#{tweet.influencer.user.twitter_screen_name}", target: '_blank').html_safe
                  = "(#{tweet.influencer.full_name})"
                %td= link_to(tweet.clicks_count, [:advertiser, tweet.campaign, tweet, :clicks])
                %td= statistics_tweet_cpc(tweet)
                %td= statistics_tweet_cpms(tweet)
                %td= tweet.influencer.audience.followers
                %td= link_to("Detalle", [:advertiser, @campaign, tweet], class: 'btn')

.row
  .span12
    .round_box{style: 'min-height: 100px'}
      .content.click_view

        %h1.title
          Clicks
          = link_to("( Ver / Ocultar )", "#", class: 'link_show_hide')


        .show_hide.hidden

          %table.table.table-striped
            %thead
              %tr
                %th Tweet
                %th IP
                %th Navegador
                %th{style: 'width: 140px'} Fecha

            %tbody
              - @campaign.clicks.each do |click|
                %tr{ :class => cycle('odd', 'even') }
                  %td= link_to(truncate(click.tweet.text, length: 100), [:advertiser, click.tweet.campaign, click.tweet])
                  %td= click.remote_ip
                  %td= click.remote_agent
                  %td= localize(click.created_at, :format => "%d/%m/%Y %H:%M:%S")

.row
  .span12
    .round_box
      .content

        %h1.title Celebridades más influyentes

        %table.table.table-striped
          %thead
            %tr
              %th{style: 'width: 45px'} &nbsp;
              %th Celebridad
              %th Clicks
              %th Reach

          %tbody
            - @campaign.influent_celebrities.reverse.each do |influencer|
              %tr{ :class => cycle('odd', 'even') }
                %td= img_link_to_twitter(influencer)
                %td
                  = link_to("@#{influencer.user.twitter_screen_name}", "http://twitter.com/#{influencer.user.twitter_screen_name}", target: '_blank').html_safe
                  = "(#{influencer.full_name})"
                %td= influencer.clicks_count
                %td= influencer.audience.followers

.row
  .span12
    .round_box
      .content

        %h1.title Retweets

        %table.table.table-striped
          %thead
            %tr
              %th{style: 'width: 45px'} &nbsp;
              %th Usuario
              %th Tweet
              %th Seguidores
              %th{style: 'width: 140px'} Fecha

          %tbody
            - @campaign.retweets.order('twitter_created_at asc').each do |retweet|
              %tr{ :class => cycle('odd', 'even') }
                %td= img_link_to_user(retweet.twitter_image_url, retweet.twitter_screen_name)
                %td= link_to_twitter_screen_name(retweet.twitter_screen_name)
                %td= link_to(truncate(retweet.tweet.text, length: 20), "http://twitter.com/#{retweet.twitter_screen_name}/status/#{retweet.twitter_id}", target: '_blank')
                %td= retweet.twitter_followers_count
                %td= localize(retweet.twitter_created_at, :format => "%d/%m/%Y %H:%M:%S")

        = link_to("Volver", [:advertiser, @campaign], class: 'btn btn-primary')

.row
  .span12
    .round_box
      .content

        %h1.title= "Hashtag: "

        %div
          Menciones:
          = @campaign.hashtag_count




:javascript
  var chart;
  $(document).ready(function() {
    chart = new Highcharts.Chart({
      chart: {
        renderTo: 'graph_reach_area',
        plotBackgroundColor: null,
        plotBorderWidth: null,
        plotShadow: false
      },
      title: {
        text: 'Reach de la campaña'
      },
      tooltip: {
        formatter: function() {
          return '<b>'+ this.point.name +'</b>: '+ Highcharts.numberFormat(this.percentage, 2) +' %';
        }
      },
      plotOptions: {
        pie: {
          allowPointSelect: true,
          cursor: 'pointer',
          dataLabels: {
            enabled: true,
            color: '#000000',
            connectorColor: '#000000',
            formatter: function() {
              return '<b>'+ this.point.name +'</b>: '+ Highcharts.numberFormat(this.percentage, 2) +' %';
            }
          },
          showInLegend: true
        }
      },
      series: [{
        type: 'pie',
        name: 'Porcentage según reach de celebridad',
        data: [
          #{@campaign.highrise_reach}
        ]
      }]
    });


    chart = new Highcharts.Chart({
      chart: {
        renderTo: 'graph_reach_bar',
        type: 'column',
        margin: [ 50, 50, 100, 80]
    	},
    	title: {
    		text: 'Reach por celebridad'
    	},
    	xAxis: {
    		categories: [
    			#{@campaign.highrise_reach_bar_label} , 'compartidos'
    		],
    		labels: {
    			rotation: -45,
    			align: 'right',
    			style: {
    				font: 'normal 13px Verdana, sans-serif'
    			}
    		}
    	},
    	yAxis: {
    		min: 0,
    		title: {
    			text: 'Reach'
    		}
    	},
    	legend: {
    		enabled: false
    	},
    	tooltip: {
    		formatter: function() {
    			return '<b>'+ this.x +'</b><br/>'+
    				'Reach: '+ Highcharts.numberFormat(this.y, 1);
    		}
    	},
    	series: [{
    		name: 'Reach',
    		data: [#{@campaign.highrise_reach_bar_data}, #{@campaign.highrise_shared_users_reach_bar_data}],
    		dataLabels: {
    			enabled: true,
    			rotation: -90,
    			color: '#FFFFFF',
    			align: 'right',
    			x: -3,
    			y: 10,
    			formatter: function() {
    			  return this.y;
    			},
    			style: {
    				font: 'normal 13px Verdana, sans-serif'
    			}
    		}
    	}]
    });


    chart = new Highcharts.Chart({
      chart: {
        renderTo: 'evolution_clicks',
        type: 'line',
        marginRight: 130,
        marginBottom: 25
      },
      title: {
        text: 'Clicks',
        x: -20 //center
      },
      xAxis: {
        categories: [#{@campaign.highrise_metrics_label}]
      },
      yAxis: {
        title: {
          text: 'Clicks'
        },
        plotLines: [{
          value: 0,
          width: 1,
          color: '#808080'
        }]
      },
      tooltip: {
        formatter: function() {
          return '<b>'+ this.series.name +'</b><br/>'+ this.x +': '+ this.y;
        }
      },
      legend: {
        layout: 'vertical',
        align: 'right',
        verticalAlign: 'top',
        x: -10,
        y: 100,
        borderWidth: 0
      },
      series: [{
        name: 'Clicks',
        data: [#{@campaign.highrise_clicks_evolution}]
      }]
    });


    chart = new Highcharts.Chart({
      chart: {
        renderTo: 'evolution_retweets',
        type: 'line',
        marginRight: 130,
        marginBottom: 25
      },
      title: {
        text: 'Retweets',
        x: -20 //center
      },
      xAxis: {
        categories: [#{@campaign.highrise_metrics_label}]
      },
      yAxis: {
        title: {
          text: 'Retweets'
        },
        plotLines: [{
          value: 0,
          width: 1,
          color: '#808080'
        }]
      },
      tooltip: {
        formatter: function() {
          return '<b>'+ this.series.name +'</b><br/>'+ this.x +': '+ this.y;
        }
      },
      legend: {
        layout: 'vertical',
        align: 'right',
        verticalAlign: 'top',
        x: -10,
        y: 100,
        borderWidth: 0
      },
      series: [{
        name: 'Retweets',
        data: [#{@campaign.highrise_retweets_evolution}]
      }]
    });


    chart = new Highcharts.Chart({
      chart: {
        renderTo: 'evolution_followers',
        type: 'line',
        marginRight: 130,
        marginBottom: 25
      },
      title: {
        text: 'Seguidores',
        x: -20 //center
      },
      xAxis: {
        categories: [#{@campaign.highrise_metrics_label}]
      },
      yAxis: {
        title: {
          text: 'Seguidores'
        },
        plotLines: [{
          value: 0,
          width: 1,
          color: '#808080'
        }]
      },
      tooltip: {
        formatter: function() {
          return '<b>'+ this.series.name +'</b><br/>'+ this.x +': '+ this.y;
        }
      },
      legend: {
        layout: 'vertical',
        align: 'right',
        verticalAlign: 'top',
        x: -10,
        y: 100,
        borderWidth: 0
      },
      series: [{
        name: 'Seguidores',
        data: [#{@campaign.highrise_followers_evolution}]
      }]
    });

  });